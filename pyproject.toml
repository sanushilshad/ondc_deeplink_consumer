[project]
name = "ondc_deeplink_consumer"
# version = "0.0.0"
dynamic = ["version"]
description = "Your package description here"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
urls = { "Homepage" = "https://github.com/sanushuilshad/ondc_deeplink_consumer" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

dependencies = [
    "httpx==0.28.1",
    "pyyaml==6.0.2",
    "jsonschema==4.23.0",
    "pytest==8.3.4",
    "pytest_httpx==0.35.0",
    "pytest-asyncio==0.25.3"
]




[tool.semantic_release]
assets = []
build_command_env = []
# commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
# commit_parser = "semantic_release.history.parsers:angular_parser"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
# repo_dir = "/home/dev2/ondc_deeplink_consumer"
no_git_verify = false
tag_format = "v{version}"
version_variable = "ondc_deeplink_consumer/__init__.py:__version__"
# build_command = "python -m build"
version_source="tag"
upload_to_pypi = true
upload_to_repository = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

